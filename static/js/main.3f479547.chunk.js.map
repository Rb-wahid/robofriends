{"version":3,"sources":["components/Card.js","reportWebVitals.js","components/CardList.js","components/SearchBox.js","components/Scroll.js","containers/App.js","index.js"],"names":["Card","name","email","id","className","src","alt","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","CardList","robots","map","user","i","SearchBox","searchField","searchChange","type","placeholder","onChange","Scroll","props","style","overflowY","border","height","children","App","onSearchChange","event","setState","target","value","state","fetch","response","json","users","this","filteredRobots","filter","robot","toLowerCase","includes","length","Component","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"+MAceA,EAZF,SAAC,GAAyB,IAAvBC,EAAsB,EAAtBA,KAAMC,EAAgB,EAAhBA,MAAOC,EAAS,EAATA,GACzB,OACE,sBAAKC,UAAU,sDAAf,UACE,qBAAKC,IAAG,+BAA0BF,EAA1B,YAAwCG,IAAI,UACpD,gCACE,6BAAKL,IACL,4BAAIC,WCICK,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,O,oCCaCQ,EAjBE,SAAC,GAAgB,IAAdC,EAAa,EAAbA,OAClB,OACE,8BACGA,EAAOC,KAAI,SAACC,EAAMC,GACjB,OACE,cAAC,EAAD,CAEEjB,GAAIc,EAAOG,GAAGjB,GACdF,KAAMgB,EAAOG,GAAGnB,KAChBC,MAAOe,EAAOG,GAAGlB,OAHZkB,SCMFC,EAbG,SAAC,GAAiC,EAAhCC,YAAiC,IAApBC,EAAmB,EAAnBA,aAC/B,OACE,cAAC,WAAD,CAAUnB,UAAU,MAApB,SACE,uBACEA,UAAU,gCACVoB,KAAK,SACLC,YAAY,gBACZC,SAAUH,OCCHI,EARA,SAACC,GACZ,OACI,qBAAKC,MAAO,CAAEC,UAAW,SAAUC,OAAQ,kBAAmBC,OAAQ,SAAtE,SACKJ,EAAMK,YCyCJC,G,wDAvCb,aAAe,IAAD,8BACZ,gBAaFC,eAAiB,SAACC,GAChB,EAAKC,SAAS,CAAEf,YAAac,EAAME,OAAOC,SAb1C,EAAKC,MAAQ,CACXvB,OAAQ,GACRK,YAAa,IAJH,E,qDAQd,WAAqB,IAAD,OAClBmB,MAAM,8CACH/B,MAAK,SAACgC,GAAD,OAAcA,EAASC,UAC5BjC,MAAK,SAACkC,GAAD,OAAW,EAAKP,SAAS,CAAEpB,OAAQ2B,S,oBAO7C,WAAU,IAAD,EACyBC,KAAKL,MAA7BvB,EADD,EACCA,OAAQK,EADT,EACSA,YAEVwB,EAAiB7B,EAAO8B,QAAO,SAACC,GACpC,OAAOA,EAAM/C,KAAKgD,cAAcC,SAAS5B,EAAY2B,kBAGvD,OAAQhC,EAAOkC,OAGb,sBAAK/C,UAAU,KAAf,UACE,oBAAIA,UAAU,KAAd,yBADF,IAEE,cAAC,EAAD,CAAWmB,aAAcsB,KAAKV,iBAC9B,cAAC,EAAD,UACE,cAAC,EAAD,CAAUlB,OAAQ6B,SANtB,6C,GA3BYM,cCElBC,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1BlD,M","file":"static/js/main.3f479547.chunk.js","sourcesContent":["import React from \"react\";\n\nconst Card = ({ name, email, id }) => {\n    return (\n      <div className=\"tc bg-light-green dib br3 pa3 ma2 grow bw2 shadow-5\">\n        <img src={`https://robohash.org/${id}?200x200`} alt=\"photo\"></img>\n        <div>\n          <h2>{name}</h2>\n          <p>{email}</p>\n        </div>\n      </div>\n    );\n}\n\nexport default Card;","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from \"react\";\nimport Card from \"./Card\";\n\nconst CardList = ({ robots }) => {\n  return (\n    <div>\n      {robots.map((user, i) => {\n        return (\n          <Card\n            key={i}\n            id={robots[i].id}\n            name={robots[i].name}\n            email={robots[i].email}\n          />\n        );\n      })}\n    </div>\n  );\n};\n\nexport default CardList;\n","import React, { Fragment } from \"react\";\n\nconst SearchBox = ({searchField, searchChange }) => {\n  return (\n    <Fragment className=\"pa2\">\n      <input\n        className=\"pa3 ba b--green bg-light-blue\"\n        type=\"search\"\n        placeholder=\"search robots\"\n        onChange={searchChange}\n      ></input>\n    </Fragment>\n  );\n};\n\nexport default SearchBox;\n","import React from 'react';\n\nconst Scroll = (props) => {\n    return (\n        <div style={{ overflowY: \"scroll\", border: \"5px solid black\", height: \"800px\" }}>\n            {props.children}\n        </div>\n    );\n};\n\nexport default Scroll;\n","import React, { Component } from \"react\";\nimport CardList from \"../components/CardList\";\nimport SearchBox from \"../components/SearchBox\";\nimport Scroll from \"../components/Scroll\";\nimport \"./App.css\";\n\nclass App extends Component {\n  constructor() {\n    super();\n    this.state = {\n      robots: [],\n      searchField: \"\",\n    };\n  }\n\n  componentDidMount() {\n    fetch(\"https://jsonplaceholder.typicode.com/users\")\n      .then((response) => response.json())\n      .then((users) => this.setState({ robots: users }));\n  }\n\n  onSearchChange = (event) => {\n    this.setState({ searchField: event.target.value });\n  };\n\n  render() {\n    const { robots, searchField } = this.state;\n\n    const filteredRobots = robots.filter((robot) => {\n      return robot.name.toLowerCase().includes(searchField.toLowerCase());\n    });\n\n    return !robots.length ? (\n      <h1>Loading</h1>\n    ) : (\n      <div className=\"tc\">\n        <h1 className=\"f1\">RoboFriends</h1>,\n        <SearchBox searchChange={this.onSearchChange} />\n        <Scroll>\n          <CardList robots={filteredRobots} />\n        </Scroll>\n      </div>\n    );\n  }\n}\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport Card from \"./components/Card\";\nimport reportWebVitals from \"./reportWebVitals\";\nimport \"tachyons\";\n import App from \"./containers/App\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}